plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    mods {
        "bowinfinityfix" {
            sourceSet sourceSets.main
        }
    }
}

repositories {
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    // Technically don't need this, but will keep in just in case
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    manifest {
        attributes([
            "Specification-Title": "bowinfinityfix",
            "Specification-Version": "1",
            "Specification-Vendor": "Parker Young",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor": "Parker8283",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from ("LICENSE") { rename { "${it}_${project.base.archivesName.get()}" } }
}

tasks.withType(org.gradle.jvm.tasks.Jar).configureEach {
    it.archiveAppendix.set "1.21-fabric"
}
